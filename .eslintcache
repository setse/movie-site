[{"C:\\Users\\nsets\\movie-app\\client\\src\\pages\\MoviePage.js":"1","C:\\Users\\nsets\\movie-app\\client\\src\\index.js":"2","C:\\Users\\nsets\\movie-app\\client\\src\\store\\reducers\\authReducer.js":"3","C:\\Users\\nsets\\movie-app\\client\\src\\store\\reducers\\index.js":"4","C:\\Users\\nsets\\movie-app\\client\\src\\pages\\MainPage.js":"5","C:\\Users\\nsets\\movie-app\\client\\src\\pages\\AuthPage.js":"6","C:\\Users\\nsets\\movie-app\\client\\src\\pages\\MyMoviesPage.js":"7","C:\\Users\\nsets\\movie-app\\client\\src\\pages\\EditMoviePage.js":"8","C:\\Users\\nsets\\movie-app\\client\\src\\components\\Review\\ReviewList.js":"9","C:\\Users\\nsets\\movie-app\\client\\src\\store\\actions\\authAction.js":"10","C:\\Users\\nsets\\movie-app\\client\\src\\pages\\AddMoviePage.js":"11","C:\\Users\\nsets\\movie-app\\client\\src\\queries\\index.js":"12","C:\\Users\\nsets\\movie-app\\client\\src\\components\\Movie\\Movie.js":"13","C:\\Users\\nsets\\movie-app\\client\\src\\components\\Review\\Review.js":"14","D:\\ReactProjects\\movie-site\\src\\index.js":"15","D:\\ReactProjects\\movie-site\\src\\store\\reducers\\authReducer.js":"16","D:\\ReactProjects\\movie-site\\src\\store\\reducers\\index.js":"17","D:\\ReactProjects\\movie-site\\src\\pages\\AuthPage.js":"18","D:\\ReactProjects\\movie-site\\src\\pages\\MainPage.js":"19","D:\\ReactProjects\\movie-site\\src\\pages\\MoviePage.js":"20","D:\\ReactProjects\\movie-site\\src\\components\\Register\\Register.js":"21","D:\\ReactProjects\\movie-site\\src\\components\\Review\\ReviewList.js":"22","D:\\ReactProjects\\movie-site\\src\\store\\actions\\authAction.js":"23","D:\\ReactProjects\\movie-site\\src\\pages\\AddMoviePage.js":"24","D:\\ReactProjects\\movie-site\\src\\components\\Navbar\\Navbar.js":"25","D:\\ReactProjects\\movie-site\\src\\components\\Review\\Review.js":"26","D:\\ReactProjects\\movie-site\\src\\pages\\MyMoviesPage.js":"27","D:\\ReactProjects\\movie-site\\src\\pages\\EditMoviePage.js":"28"},{"size":3436,"mtime":1607464213656,"results":"29","hashOfConfig":"30"},{"size":1850,"mtime":1607037614834,"results":"31","hashOfConfig":"30"},{"size":386,"mtime":1606851801273,"results":"32","hashOfConfig":"30"},{"size":183,"mtime":1606595618050,"results":"33","hashOfConfig":"30"},{"size":2814,"mtime":1607443456021,"results":"34","hashOfConfig":"30"},{"size":1396,"mtime":1607443298012,"results":"35","hashOfConfig":"30"},{"size":949,"mtime":1607403297850,"results":"36","hashOfConfig":"30"},{"size":4635,"mtime":1607443374953,"results":"37","hashOfConfig":"30"},{"size":2572,"mtime":1607443212861,"results":"38","hashOfConfig":"30"},{"size":466,"mtime":1607387757818,"results":"39","hashOfConfig":"30"},{"size":3550,"mtime":1607443276128,"results":"40","hashOfConfig":"30"},{"size":2681,"mtime":1607377430165,"results":"41","hashOfConfig":"30"},{"size":426,"mtime":1607443023169,"results":"42","hashOfConfig":"30"},{"size":777,"mtime":1607385721904,"results":"43","hashOfConfig":"30"},{"size":1863,"mtime":1614283885630,"results":"44","hashOfConfig":"45"},{"size":386,"mtime":1606851801273,"results":"46","hashOfConfig":"45"},{"size":183,"mtime":1606595618050,"results":"47","hashOfConfig":"45"},{"size":1396,"mtime":1607443298012,"results":"48","hashOfConfig":"45"},{"size":2814,"mtime":1607443456021,"results":"49","hashOfConfig":"45"},{"size":3436,"mtime":1607464213656,"results":"50","hashOfConfig":"45"},{"size":1951,"mtime":1607443160617,"results":"51","hashOfConfig":"45"},{"size":2572,"mtime":1607443212861,"results":"52","hashOfConfig":"45"},{"size":466,"mtime":1607387757818,"results":"53","hashOfConfig":"45"},{"size":3550,"mtime":1607443276128,"results":"54","hashOfConfig":"45"},{"size":1907,"mtime":1607443087276,"results":"55","hashOfConfig":"45"},{"size":777,"mtime":1607385721904,"results":"56","hashOfConfig":"45"},{"size":949,"mtime":1607403297850,"results":"57","hashOfConfig":"45"},{"size":4635,"mtime":1607443374953,"results":"58","hashOfConfig":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},"1tmlwd7",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},"159fk8k",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"107"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nsets\\movie-app\\client\\src\\pages\\MoviePage.js",["126","127","128"],"import { useMutation, useQuery } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MOVIE, GETUSER, DELETE_MOVIE } from \"../queries/index\";\r\n\r\nimport classes from \"./pages styles/moviepage.module.scss\";\r\nimport Stars from \"react-star-ratings\";\r\nimport Alert from \"sweetalert2\";\r\n\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport ReviewList from \"../components/Review/ReviewList\";\r\n\r\nconst MoviePage = (props) => {\r\n  const { data, loading } = useQuery(MOVIE, {\r\n    variables: { id: props.match.params.id },\r\n  });\r\n\r\n  const userdata = useQuery(GETUSER).data;\r\n\r\n  const [deleteMovie, { loadingDel, errorDel }] = useMutation(DELETE_MOVIE, {\r\n    onCompleted(deleteMovie) {\r\n      Alert.fire(\"Deleted!\");\r\n      props.history.push(\"/mymovies\");\r\n      window.location.reload(false);\r\n    },\r\n    onError(deleteMovie) {\r\n      Alert.fire(\"Cant delete!\", \"\", \"error\");\r\n    },\r\n  });\r\n\r\n  const deleteMovieHandler = () => {\r\n    deleteMovie({\r\n      variables: { id: props.match.params.id },\r\n    });\r\n  };\r\n  // if (data.movie.creatorname === userdata.currentUser.username) {\r\n  //   sameUser = \"true\";\r\n  // }\r\n\r\n  if (data && userdata) {\r\n    const {\r\n      thumbnail,\r\n      duration,\r\n      title,\r\n      ratingsAvg,\r\n      ratings,\r\n      releaseDate,\r\n      actors,\r\n      addedDate,\r\n      creatorname,\r\n      description,\r\n      id,\r\n      reviews,\r\n    } = data.movie;\r\n\r\n    // const userdata = useQuery(GETUSER).data;\r\n    // useEffect(() => {\r\n    //   if (!loading) {\r\n    //     userdata();\r\n    //   }\r\n    // });\r\n\r\n    //   const sameUser = data.movie.creatorname === userdata.currentUser.username;\r\n    // console.log(data.movie.reviews);\r\n\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <div className={classes.moviebox}>\r\n          <div className={classes.title}>\r\n            <h3>{title}</h3>\r\n\r\n            <div className={classes.creatordetails}>\r\n              <p>Added by {creatorname} </p>\r\n              <p> Added at {new Date(addedDate).toLocaleString()}</p>\r\n            </div>\r\n          </div>\r\n          <div className={classes.content}>\r\n            <div className={classes.pictureside}>\r\n              <img src={thumbnail} alt={title} />\r\n              <br />\r\n              <Stars\r\n                rating={ratingsAvg}\r\n                starRatedColor=\"gold\"\r\n                isSelectable={false}\r\n                numberOfStars={5}\r\n                name=\"rating\"\r\n                starDimension=\"25px\"\r\n              />\r\n              <p>Rated {ratings} times</p>\r\n              <p>Duration: {duration}min</p>\r\n            </div>\r\n            <div className={classes.textside}>\r\n              <p>{description}</p> <br />\r\n              <p>Release Date: {releaseDate}</p> <br />\r\n              <p>Actors: {actors}</p> <br />\r\n              {data.movie.creatorname === userdata.currentUser.username ? (\r\n                <div className={classes.editbutton}>\r\n                  <Link to={id + \"/edit\"}>\r\n                    <button>Edit This Movie Details</button>\r\n                  </Link>\r\n                  <button onClick={deleteMovieHandler}>Delete</button>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ReviewList reviews={reviews} movieid={id} />\r\n      </div>\r\n    );\r\n  }\r\n  return \"Please sign in to see movie details\";\r\n};\r\n\r\nexport default MoviePage;\r\n",["129","130"],"C:\\Users\\nsets\\movie-app\\client\\src\\index.js",["131","132"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  ApolloError,\n  ApolloLink,\n  HttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { onError } from \"@apollo/client/link/error\";\n// Import Reducers\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers\";\nimport authReducer from \"./store/reducers/authReducer\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    console.log(\"graphQLErrors\", graphQLErrors);\n  }\n  if (networkError) {\n    console.log(\"networkError\", networkError);\n  }\n});\n\nconst httpLink = new HttpLink({ uri: \"http://localhost:8000/\" });\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"token\");\n  // add the authorization to the headers\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst link = ApolloLink.from([authLink, errorLink, httpLink]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link,\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["133","134"],"C:\\Users\\nsets\\movie-app\\client\\src\\store\\reducers\\authReducer.js",[],"C:\\Users\\nsets\\movie-app\\client\\src\\store\\reducers\\index.js",[],"C:\\Users\\nsets\\movie-app\\client\\src\\pages\\MainPage.js",["135","136"],"import Movie from \"../components/Movie/Movie\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport classes from \"./pages styles/mainpage.module.scss\";\r\n\r\nimport { MOVIES } from \"../queries/index\";\r\nimport { useState } from \"react\";\r\n\r\nconst MainPage = (props) => {\r\n  const { loading, err, data } = useQuery(MOVIES, {});\r\n\r\n  //Sorting Movies\r\n  //I dont know if this sorting method is a good way to sort them, its my first time to\r\n  //implement sorting.\r\n\r\n  let prevSortPref = localStorage.getItem(\"sortPref\");\r\n\r\n  const [sortValue, setSortValue] = useState(prevSortPref);\r\n\r\n  const sortHandler = (e) => {\r\n    setSortValue(e.target.value);\r\n    localStorage.setItem(\"sortPref\", e.target.value);\r\n    //console.log(sortValue);\r\n  };\r\n\r\n  if (data) {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <div className={classes.sortbutton}>\r\n          <div className={classes.sort1}>\r\n            <h4>Sort by</h4>\r\n          </div>\r\n          <div className={classes.sort2}>\r\n            <select onChange={sortHandler}>\r\n              <option value={prevSortPref} selected disabled hidden>\r\n                {prevSortPref === \"bydate\"\r\n                  ? \"Date\"\r\n                  : prevSortPref === \"byname\"\r\n                  ? \"Name\"\r\n                  : \"Rating\"}\r\n              </option>\r\n              <option value=\"bydate\">Date</option>\r\n              <option value=\"byname\">Name</option>\r\n              <option value=\"byrating\">Rating</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className={classes.movielist}>\r\n          {sortValue === \"byrating\" ? (\r\n            <div className={classes.movies}>\r\n              {data.movies\r\n                .slice()\r\n                .sort((a, b) =>\r\n                  a.ratingsAvg < b.ratingsAvg\r\n                    ? 1\r\n                    : b.ratingsAvg < a.ratingsAvg\r\n                    ? -1\r\n                    : 0\r\n                )\r\n                .map((movie) => (\r\n                  <Movie key={movie.id} {...movie} />\r\n                ))}\r\n            </div>\r\n          ) : sortValue === \"byname\" ? (\r\n            <div className={classes.movies}>\r\n              {data.movies\r\n                .slice()\r\n                .sort((a, b) =>\r\n                  a.title > b.title ? 1 : b.title > a.title ? -1 : 0\r\n                )\r\n                .map((movie) => (\r\n                  <Movie key={movie.id} {...movie} />\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            <div className={classes.movies}>\r\n              {data.movies.map((movie) => (\r\n                <Movie key={movie.id} {...movie} />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default MainPage;\r\n","C:\\Users\\nsets\\movie-app\\client\\src\\pages\\AuthPage.js",[],"C:\\Users\\nsets\\movie-app\\client\\src\\pages\\MyMoviesPage.js",["137","138"],"import Movie from \"../components/Movie/Movie\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport classes from \"./pages styles/mainpage.module.scss\";\r\n\r\nimport { MOVIES, GETUSER } from \"../queries/index\";\r\n\r\nconst MyMoviesPage = (props) => {\r\n  const { loading, err, data } = useQuery(MOVIES, {});\r\n  const userdata = useQuery(GETUSER).data;\r\n\r\n  console.log(data);\r\n  if (data && userdata) {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <div className={classes.movielist}>\r\n          <div className={classes.movies}>\r\n            {data.movies\r\n              .filter(\r\n                (movie) => movie.creatorname === userdata.currentUser.username\r\n              )\r\n              .map((movie) => (\r\n                <Movie key={movie.id} {...movie} />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default MyMoviesPage;\r\n","C:\\Users\\nsets\\movie-app\\client\\src\\pages\\EditMoviePage.js",["139","140"],"C:\\Users\\nsets\\movie-app\\client\\src\\components\\Review\\ReviewList.js",["141","142","143"],"C:\\Users\\nsets\\movie-app\\client\\src\\store\\actions\\authAction.js",[],"C:\\Users\\nsets\\movie-app\\client\\src\\pages\\AddMoviePage.js",["144","145"],"C:\\Users\\nsets\\movie-app\\client\\src\\queries\\index.js",[],"C:\\Users\\nsets\\movie-app\\client\\src\\components\\Movie\\Movie.js",[],"C:\\Users\\nsets\\movie-app\\client\\src\\components\\Review\\Review.js",[],"D:\\ReactProjects\\movie-site\\src\\index.js",["146","147"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  ApolloError,\n  ApolloLink,\n  HttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { onError } from \"@apollo/client/link/error\";\n// Import Reducers\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers\";\nimport authReducer from \"./store/reducers/authReducer\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    console.log(\"graphQLErrors\", graphQLErrors);\n  }\n  if (networkError) {\n    console.log(\"networkError\", networkError);\n  }\n});\n\nconst httpLink = new HttpLink({ uri: \"https://moviesiteapi.herokuapp.com/\" });\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"token\");\n  // add the authorization to the headers\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst link = ApolloLink.from([authLink, errorLink, httpLink]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link,\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["148","149"],"D:\\ReactProjects\\movie-site\\src\\store\\reducers\\authReducer.js",[],"D:\\ReactProjects\\movie-site\\src\\store\\reducers\\index.js",[],"D:\\ReactProjects\\movie-site\\src\\pages\\AuthPage.js",[],"D:\\ReactProjects\\movie-site\\src\\pages\\MainPage.js",["150","151"],"D:\\ReactProjects\\movie-site\\src\\pages\\MoviePage.js",["152","153","154"],["155","156"],"D:\\ReactProjects\\movie-site\\src\\components\\Register\\Register.js",["157","158","159"],"import { useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { REGISTER } from \"../../queries/index\";\r\nimport * as actions from \"../../store/actions/authAction\";\r\n\r\nimport classes from \"./register.module.scss\";\r\nimport Alert from \"sweetalert2\";\r\n\r\nconst RegisterForm = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [register, { loadingRegister, errorRegister }] = useMutation(REGISTER, {\r\n    onCompleted({ register }) {\r\n      Alert.fire(\"Register Succes! Now you can login\", \"\", \"success\");\r\n      window.location.reload();\r\n    },\r\n    onError(errorRegister) {\r\n      dispatch(actions.loginFail(errorRegister));\r\n    },\r\n  });\r\n\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const submit = useCallback(() => {\r\n    register({ variables: { username, password } });\r\n  }, [username, password]);\r\n\r\n  return (\r\n    <div className={classes.form}>\r\n      <h1>Sign Up</h1>\r\n      <form>\r\n        <div className={classes.textfield}>\r\n          <input\r\n            type=\"username\"\r\n            required\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <span></span>\r\n          <label htmlFor=\"username\">Username</label>\r\n        </div>\r\n        <div className={classes.textfield}>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <span></span>\r\n          <label htmlFor=\"password\">Password</label>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button\"\r\n          onClick={(e) => {\r\n            submit();\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","D:\\ReactProjects\\movie-site\\src\\components\\Review\\ReviewList.js",["160","161","162"],"D:\\ReactProjects\\movie-site\\src\\store\\actions\\authAction.js",[],"D:\\ReactProjects\\movie-site\\src\\pages\\AddMoviePage.js",["163","164"],"import { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { CREATE_MOVIE, MOVIES } from \"../queries/index\";\r\n\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\n\r\nimport classes from \"./pages styles/addmoviepage.module.scss\";\r\nimport Alert from \"sweetalert2\";\r\n\r\nconst AddMoviePage = (props) => {\r\n  const [createMovie, { loading, error }] = useMutation(CREATE_MOVIE, {\r\n    onCompleted({ createMovie }) {\r\n      Alert.fire(\"Added Movie succesfully!\", \"\", \"success\");\r\n      props.history.push(\"/main\");\r\n    },\r\n    onError(createMovie) {\r\n      Alert.fire(\"Error\", \"Please check inputs\", \"error\");\r\n    },\r\n  });\r\n\r\n  const [title, setTitle] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [duration, setDuration] = useState();\r\n  const [actors, setActors] = useState();\r\n  const [releaseDate, setReleaseDate] = useState();\r\n  const [thumbnail, setThumbnail] = useState();\r\n\r\n  const onSubmit = (e) => {\r\n    createMovie({\r\n      variables: {\r\n        title,\r\n        description,\r\n        releaseDate,\r\n        duration: +duration,\r\n        thumbnail,\r\n        actors,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: MOVIES,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <div className={classes.form}>\r\n        <h1>Add Movie</h1>\r\n        <form autocomplete=\"off\">\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Movie Title:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"description\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Description:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              name=\"duration\"\r\n              step=\"1\"\r\n              onChange={(e) => setDuration(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Duration:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"date\"\r\n              required\r\n              name=\"date\"\r\n              onChange={(e) => setReleaseDate(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Release Date:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"pic\"\r\n              onChange={(e) => setThumbnail(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Thumbnail Picture:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"actors\"\r\n              onChange={(e) => setActors(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Actors:</label>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"button\"\r\n            onClick={(e) => {\r\n              onSubmit(e);\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMoviePage;\r\n","D:\\ReactProjects\\movie-site\\src\\components\\Navbar\\Navbar.js",[],"D:\\ReactProjects\\movie-site\\src\\components\\Review\\Review.js",[],"D:\\ReactProjects\\movie-site\\src\\pages\\MyMoviesPage.js",["165","166"],"D:\\ReactProjects\\movie-site\\src\\pages\\EditMoviePage.js",["167","168"],{"ruleId":"169","severity":1,"message":"170","line":13,"column":17,"nodeType":"171","messageId":"172","endLine":13,"endColumn":24},{"ruleId":"169","severity":1,"message":"173","line":19,"column":25,"nodeType":"171","messageId":"172","endLine":19,"endColumn":35},{"ruleId":"169","severity":1,"message":"174","line":19,"column":37,"nodeType":"171","messageId":"172","endLine":19,"endColumn":45},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"169","severity":1,"message":"179","line":10,"column":3,"nodeType":"171","messageId":"172","endLine":10,"endColumn":14},{"ruleId":"169","severity":1,"message":"180","line":20,"column":8,"nodeType":"171","messageId":"172","endLine":20,"endColumn":19},{"ruleId":"175","replacedBy":"181"},{"ruleId":"177","replacedBy":"182"},{"ruleId":"169","severity":1,"message":"170","line":11,"column":11,"nodeType":"171","messageId":"172","endLine":11,"endColumn":18},{"ruleId":"169","severity":1,"message":"183","line":11,"column":20,"nodeType":"171","messageId":"172","endLine":11,"endColumn":23},{"ruleId":"169","severity":1,"message":"170","line":10,"column":11,"nodeType":"171","messageId":"172","endLine":10,"endColumn":18},{"ruleId":"169","severity":1,"message":"183","line":10,"column":20,"nodeType":"171","messageId":"172","endLine":10,"endColumn":23},{"ruleId":"169","severity":1,"message":"170","line":12,"column":23,"nodeType":"171","messageId":"172","endLine":12,"endColumn":30},{"ruleId":"169","severity":1,"message":"184","line":12,"column":32,"nodeType":"171","messageId":"172","endLine":12,"endColumn":37},{"ruleId":"169","severity":1,"message":"170","line":12,"column":23,"nodeType":"171","messageId":"172","endLine":12,"endColumn":30},{"ruleId":"169","severity":1,"message":"184","line":12,"column":32,"nodeType":"171","messageId":"172","endLine":12,"endColumn":37},{"ruleId":"185","severity":1,"message":"186","line":54,"column":7,"nodeType":"187","messageId":"188","endLine":54,"endColumn":14},{"ruleId":"169","severity":1,"message":"170","line":12,"column":25,"nodeType":"171","messageId":"172","endLine":12,"endColumn":32},{"ruleId":"169","severity":1,"message":"184","line":12,"column":34,"nodeType":"171","messageId":"172","endLine":12,"endColumn":39},{"ruleId":"169","severity":1,"message":"179","line":10,"column":3,"nodeType":"171","messageId":"172","endLine":10,"endColumn":14},{"ruleId":"169","severity":1,"message":"180","line":20,"column":8,"nodeType":"171","messageId":"172","endLine":20,"endColumn":19},{"ruleId":"175","replacedBy":"189"},{"ruleId":"177","replacedBy":"190"},{"ruleId":"169","severity":1,"message":"170","line":11,"column":11,"nodeType":"171","messageId":"172","endLine":11,"endColumn":18},{"ruleId":"169","severity":1,"message":"183","line":11,"column":20,"nodeType":"171","messageId":"172","endLine":11,"endColumn":23},{"ruleId":"169","severity":1,"message":"170","line":13,"column":17,"nodeType":"171","messageId":"172","endLine":13,"endColumn":24},{"ruleId":"169","severity":1,"message":"173","line":19,"column":25,"nodeType":"171","messageId":"172","endLine":19,"endColumn":35},{"ruleId":"169","severity":1,"message":"174","line":19,"column":37,"nodeType":"171","messageId":"172","endLine":19,"endColumn":45},{"ruleId":"175","replacedBy":"191"},{"ruleId":"177","replacedBy":"192"},{"ruleId":"169","severity":1,"message":"193","line":15,"column":22,"nodeType":"171","messageId":"172","endLine":15,"endColumn":37},{"ruleId":"169","severity":1,"message":"194","line":15,"column":39,"nodeType":"171","messageId":"172","endLine":15,"endColumn":52},{"ruleId":"195","severity":1,"message":"196","line":30,"column":6,"nodeType":"197","endLine":30,"endColumn":26,"suggestions":"198"},{"ruleId":"169","severity":1,"message":"170","line":12,"column":23,"nodeType":"171","messageId":"172","endLine":12,"endColumn":30},{"ruleId":"169","severity":1,"message":"184","line":12,"column":32,"nodeType":"171","messageId":"172","endLine":12,"endColumn":37},{"ruleId":"185","severity":1,"message":"186","line":54,"column":7,"nodeType":"187","messageId":"188","endLine":54,"endColumn":14},{"ruleId":"169","severity":1,"message":"170","line":12,"column":25,"nodeType":"171","messageId":"172","endLine":12,"endColumn":32},{"ruleId":"169","severity":1,"message":"184","line":12,"column":34,"nodeType":"171","messageId":"172","endLine":12,"endColumn":39},{"ruleId":"169","severity":1,"message":"170","line":10,"column":11,"nodeType":"171","messageId":"172","endLine":10,"endColumn":18},{"ruleId":"169","severity":1,"message":"183","line":10,"column":20,"nodeType":"171","messageId":"172","endLine":10,"endColumn":23},{"ruleId":"169","severity":1,"message":"170","line":12,"column":23,"nodeType":"171","messageId":"172","endLine":12,"endColumn":30},{"ruleId":"169","severity":1,"message":"184","line":12,"column":32,"nodeType":"171","messageId":"172","endLine":12,"endColumn":37},"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'loadingDel' is assigned a value but never used.","'errorDel' is assigned a value but never used.","no-native-reassign",["199"],"no-negated-in-lhs",["200"],"'ApolloError' is defined but never used.","'authReducer' is defined but never used.",["199"],["200"],"'err' is assigned a value but never used.","'error' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf",["199"],["200"],["199"],["200"],"'loadingRegister' is assigned a value but never used.","'errorRegister' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["201"],"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},"Update the dependencies array to be: [register, username, password]",{"range":"204","text":"205"},[974,994],"[register, username, password]"]