{"version":3,"sources":["store/actions/authAction.js","queries/index.js","components/Login/Login.js","components/Register/Register.js","pages/AuthPage.js","components/Movie/Movie.js","components/Navbar/Navbar.js","pages/MainPage.js","pages/AddMoviePage.js","pages/MyMoviesPage.js","components/Review/Review.js","components/Review/ReviewList.js","pages/MoviePage.js","pages/EditMoviePage.js","App.js","reportWebVitals.js","store/reducers/authReducer.js","store/reducers/index.js","index.js","pages/pages styles/addmoviepage.module.scss","pages/pages styles/mainpage.module.scss","pages/pages styles/moviepage.module.scss","components/Navbar/navbar.module.scss","components/Review/reviewlist.module.scss","components/Review/review.module.scss","components/Login/login.module.scss","components/Register/register.module.scss","pages/pages styles/authpage.module.scss","components/Movie/movie.module.scss"],"names":["loginFail","err","Alert","fire","type","error","REGISTER","gql","LOGIN","GETUSER","MOVIES","MOVIE","CREATE_MOVIE","EDIT_MOVIE","DELETE_MOVIE","ADD_REVIEW","withRouter","props","dispatch","useDispatch","useMutation","onCompleted","token","login","localStorage","setItem","history","push","onError","errorLogin","actions","loadingLogin","useState","username","setUsername","password","setPassword","submit","useCallback","variables","className","classes","form","textfield","required","onChange","e","target","value","htmlFor","onClick","preventDefault","register","window","location","reload","errorRegister","loadingRegister","AuthPage","mode","setMode","intro","link","to","Register","Login","Movie","title","releaseDate","thumbnail","id","moviestyle","src","alt","Navbar","isLoggedIn","getItem","userdata","useQuery","data","name","currentUser","console","log","nav","logo","userprofile","links","removeItem","MainPage","loading","prevSortPref","sortValue","setSortValue","sortbutton","sort1","sort2","selected","disabled","hidden","movielist","movies","slice","sort","a","b","ratingsAvg","map","movie","AddMoviePage","createMovie","setTitle","description","setDescription","duration","setDuration","actors","setActors","setReleaseDate","setThumbnail","autocomplete","step","refetchQueries","query","MyMoviesPage","filter","creatorname","Review","review","user","rating","comment","starRatedColor","isSelectable","numberOfStars","starDimension","ReviewList","addReview","message","includes","setRating","setComment","reviews","comments","reviewinput","input","changeRating","movieid","onPost","MoviePage","match","params","deleteMovie","loadingDel","errorDel","ratings","addedDate","moviebox","creatordetails","Date","toLocaleString","content","pictureside","textside","editbutton","EditMoviePage","editMovie","initTitle","initDescription","initReleaseDate","initDuration","initThumbnail","initActors","onInput","onSubmit","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authReducer","state","action","rootReducer","combineReducers","auth","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","errorLink","graphQLErrors","networkError","httpLink","HttpLink","uri","authLink","setContext","_","headers","authorization","ApolloLink","from","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9b62e967.chunk.js","sourcesContent":["import Alert from \"sweetalert2\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\n\r\nexport const loginSucces = (token) => {\r\n  localStorage.setItem(\"token\", token);\r\n  Alert.fire(\"Login succesful!\", \"\", \"success\");\r\n  return {\r\n    type: \"LOGIN_SUCCES\",\r\n    token,\r\n  };\r\n};\r\n\r\nexport const loginFail = (err) => {\r\n  Alert.fire(\"Login failed\", ` ${err}`, \"error\");\r\n  return {\r\n    type: \"LOGIN_FAIL\",\r\n    error: err,\r\n  };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\n//Auth\r\n\r\nexport const REGISTER = gql`\r\n  mutation Register($username: String!, $password: String!) {\r\n    register(username: $username, password: $password) {\r\n      id\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n  mutation Login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GETUSER = gql`\r\n  query currentUser {\r\n    currentUser {\r\n      id\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\n//Movie\r\n\r\nexport const MOVIES = gql`\r\n  query movies {\r\n    movies {\r\n      id\r\n      title\r\n      description\r\n      releaseDate\r\n      addedDate\r\n      duration\r\n      actors\r\n      thumbnail\r\n      ratings\r\n      ratingsAvg\r\n      creatorname\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MOVIE = gql`\r\n  query movie($id: String!) {\r\n    movie(id: $id) {\r\n      id\r\n      title\r\n      description\r\n      releaseDate\r\n      addedDate\r\n      duration\r\n      actors\r\n      thumbnail\r\n      ratings\r\n      ratingsAvg\r\n      creatorname\r\n      reviews {\r\n        id\r\n        rating\r\n        comment\r\n        movie\r\n        user {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//Adding Movies\r\n\r\nexport const CREATE_MOVIE = gql`\r\n  mutation createMovie(\r\n    $title: String!\r\n    $description: String!\r\n    $releaseDate: String!\r\n    $duration: Int!\r\n    $actors: [String!]\r\n    $thumbnail: String!\r\n  ) {\r\n    createMovie(\r\n      title: $title\r\n      description: $description\r\n      releaseDate: $releaseDate\r\n      duration: $duration\r\n      actors: $actors\r\n      thumbnail: $thumbnail\r\n    ) {\r\n      id\r\n      title\r\n      description\r\n      releaseDate\r\n      duration\r\n      actors\r\n      thumbnail\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EDIT_MOVIE = gql`\r\n  mutation editMovie(\r\n    $id: String!\r\n    $title: String!\r\n    $description: String!\r\n    $releaseDate: String!\r\n    $duration: Int!\r\n    $actors: [String!]\r\n    $thumbnail: String!\r\n  ) {\r\n    editMovie(\r\n      id: $id\r\n      title: $title\r\n      description: $description\r\n      releaseDate: $releaseDate\r\n      duration: $duration\r\n      actors: $actors\r\n      thumbnail: $thumbnail\r\n    ) {\r\n      id\r\n      title\r\n      description\r\n      releaseDate\r\n      duration\r\n      actors\r\n      thumbnail\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_MOVIE = gql`\r\n  mutation deleteMovie($id: String!) {\r\n    deleteMovie(id: $id)\r\n  }\r\n`;\r\n\r\n//Review\r\n\r\nexport const ADD_REVIEW = gql`\r\n  mutation addReview($comment: String!, $rating: Int!, $movie: String!) {\r\n    addReview(comment: $comment, rating: $rating, movie: $movie) {\r\n      id\r\n      rating\r\n      comment\r\n    }\r\n  }\r\n`;\r\n","import { useState, useCallback } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport * as actions from \"../../store/actions/authAction\";\r\nimport { LOGIN } from \"../../queries/index\";\r\n\r\nimport classes from \"./login.module.scss\";\r\n\r\nconst LoginForm = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [login, { loadingLogin, errorLogin }] = useMutation(LOGIN, {\r\n    onCompleted({ login }) {\r\n      dispatch(actions.loginSucces(login.token));\r\n      props.history.push(\"/main\");\r\n    },\r\n    onError(errorLogin) {\r\n      dispatch(actions.loginFail(errorLogin));\r\n    },\r\n  });\r\n\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const submit = useCallback(() => {\r\n    login({ variables: { username, password } });\r\n  }, [username, password]);\r\n\r\n  return (\r\n    <div className={classes.form}>\r\n      <h1>Log In</h1>\r\n      <form>\r\n        <div className={classes.textfield}>\r\n          <input\r\n            type=\"username\"\r\n            required\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <span></span>\r\n          <label htmlFor=\"username\">Username</label>\r\n        </div>\r\n        <div className={classes.textfield}>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <span></span>\r\n          <label htmlFor=\"password\">Password</label>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button\"\r\n          onClick={(e) => {\r\n            submit();\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          Log In\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import { useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { REGISTER } from \"../../queries/index\";\r\nimport * as actions from \"../../store/actions/authAction\";\r\n\r\nimport classes from \"./register.module.scss\";\r\nimport Alert from \"sweetalert2\";\r\n\r\nconst RegisterForm = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [register, { loadingRegister, errorRegister }] = useMutation(REGISTER, {\r\n    onCompleted({ register }) {\r\n      Alert.fire(\"Register Succes! Now you can login\", \"\", \"success\");\r\n      window.location.reload();\r\n    },\r\n    onError(errorRegister) {\r\n      dispatch(actions.loginFail(errorRegister));\r\n    },\r\n  });\r\n\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const submit = useCallback(() => {\r\n    register({ variables: { username, password } });\r\n  }, [username, password]);\r\n\r\n  return (\r\n    <div className={classes.form}>\r\n      <h1>Sign Up</h1>\r\n      <form>\r\n        <div className={classes.textfield}>\r\n          <input\r\n            type=\"username\"\r\n            required\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <span></span>\r\n          <label htmlFor=\"username\">Username</label>\r\n        </div>\r\n        <div className={classes.textfield}>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <span></span>\r\n          <label htmlFor=\"password\">Password</label>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button\"\r\n          onClick={(e) => {\r\n            submit();\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport LoginForm from \"../components/Login/Login\";\r\nimport RegisterForm from \"../components/Register/Register\";\r\n\r\nimport classes from \"./pages styles/authpage.module.scss\";\r\nimport Alert from \"sweetalert2\";\r\n\r\nconst AuthPage = () => {\r\n  const [mode, setMode] = useState(\"login\");\r\n\r\n  const alertGuest = () => {\r\n    Alert.fire(\r\n      \"You are entering as a Guest\",\r\n      \"Guests cannot see movie details\",\r\n      \"warning\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.intro}>\r\n        <h2>Movie App</h2>\r\n        <h5>Your favorite place to share movies and discuss!</h5>\r\n      </div>\r\n      <div className=\"row\">\r\n        {mode === \"signup\" ? (\r\n          <div className={classes.link}>\r\n            Already have an account?{\" \"}\r\n            <button onClick={() => setMode(\"login\")}>Login</button>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.link}>\r\n            Don't have an account?{\" \"}\r\n            <button onClick={() => setMode(\"signup\")}>Sign Up</button>\r\n            <NavLink to=\"/main\" onClick={alertGuest}>\r\n              {\" \"}\r\n              <p>Enter as Guest</p>\r\n            </NavLink>\r\n          </div>\r\n        )}\r\n        {mode === \"signup\" ? <RegisterForm /> : <LoginForm />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport classes from \"./movie.module.scss\";\r\n\r\nconst Movie = (props) => {\r\n  const { title, releaseDate, thumbnail, id } = props;\r\n\r\n  return (\r\n    <div className={classes.moviestyle}>\r\n      <Link to={\"movie/\" + id}>\r\n        <h3>{title}</h3>\r\n        <p>{releaseDate}</p>\r\n        <img src={thumbnail} alt={title} />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { Link } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\n//import { useEffect, useState } from \"react\";\r\n\r\nimport { GETUSER } from \"../../queries/index\";\r\n\r\nimport classes from \"./navbar.module.scss\";\r\n\r\nconst Navbar = (props) => {\r\n  const isLoggedIn = localStorage.getItem(\"token\") !== null;\r\n\r\n  const userdata = useQuery(GETUSER).data;\r\n\r\n  let name = \"guest\";\r\n\r\n  // const [username, setUsername] = useState(\"name\");\r\n\r\n  // TODO: Fix this! >>> Fixed but i dont know if that was a bad fix\r\n  // I don't understand why the state method didn't work here so I used another aproach\r\n  if (userdata) {\r\n    //setUsername(userdata.currentUser.username);\r\n    name = userdata.currentUser.username;\r\n    console.log(\"username: \" + name); //checking if the username is matching\r\n  }\r\n\r\n  return (\r\n    <div className={classes.nav}>\r\n      <div className={classes.logo}>\r\n        <Link to={\"/main\"}>\r\n          <h1>Movie App</h1>\r\n        </Link>\r\n      </div>\r\n      <div className={classes.userprofile}>\r\n        <h5>Hello, {name} 😄 </h5>\r\n        {isLoggedIn ? (\r\n          <div className={classes.links}>\r\n            <NavLink to=\"/mymovies\">\r\n              <button>My Movies</button>\r\n            </NavLink>\r\n            <NavLink to=\"/addmovie\">\r\n              <button>Add Movie</button>\r\n            </NavLink>\r\n            <NavLink to=\"/\">\r\n              <button\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"token\");\r\n                }}\r\n              >\r\n                Log Out\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.links}>\r\n            <NavLink to=\"/auth\">\r\n              <button>Log In</button>\r\n            </NavLink>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import Movie from \"../components/Movie/Movie\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport classes from \"./pages styles/mainpage.module.scss\";\r\n\r\nimport { MOVIES } from \"../queries/index\";\r\nimport { useState } from \"react\";\r\n\r\nconst MainPage = (props) => {\r\n  const { loading, err, data } = useQuery(MOVIES, {});\r\n\r\n  //Sorting Movies\r\n  //I dont know if this sorting method is a good way to sort them, its my first time to\r\n  //implement sorting.\r\n\r\n  let prevSortPref = localStorage.getItem(\"sortPref\");\r\n\r\n  const [sortValue, setSortValue] = useState(prevSortPref);\r\n\r\n  const sortHandler = (e) => {\r\n    setSortValue(e.target.value);\r\n    localStorage.setItem(\"sortPref\", e.target.value);\r\n    //console.log(sortValue);\r\n  };\r\n\r\n  if (data) {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <div className={classes.sortbutton}>\r\n          <div className={classes.sort1}>\r\n            <h4>Sort by</h4>\r\n          </div>\r\n          <div className={classes.sort2}>\r\n            <select onChange={sortHandler}>\r\n              <option value={prevSortPref} selected disabled hidden>\r\n                {prevSortPref === \"bydate\"\r\n                  ? \"Date\"\r\n                  : prevSortPref === \"byname\"\r\n                  ? \"Name\"\r\n                  : \"Rating\"}\r\n              </option>\r\n              <option value=\"bydate\">Date</option>\r\n              <option value=\"byname\">Name</option>\r\n              <option value=\"byrating\">Rating</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className={classes.movielist}>\r\n          {sortValue === \"byrating\" ? (\r\n            <div className={classes.movies}>\r\n              {data.movies\r\n                .slice()\r\n                .sort((a, b) =>\r\n                  a.ratingsAvg < b.ratingsAvg\r\n                    ? 1\r\n                    : b.ratingsAvg < a.ratingsAvg\r\n                    ? -1\r\n                    : 0\r\n                )\r\n                .map((movie) => (\r\n                  <Movie key={movie.id} {...movie} />\r\n                ))}\r\n            </div>\r\n          ) : sortValue === \"byname\" ? (\r\n            <div className={classes.movies}>\r\n              {data.movies\r\n                .slice()\r\n                .sort((a, b) =>\r\n                  a.title > b.title ? 1 : b.title > a.title ? -1 : 0\r\n                )\r\n                .map((movie) => (\r\n                  <Movie key={movie.id} {...movie} />\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            <div className={classes.movies}>\r\n              {data.movies.map((movie) => (\r\n                <Movie key={movie.id} {...movie} />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default MainPage;\r\n","import { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { CREATE_MOVIE, MOVIES } from \"../queries/index\";\r\n\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\n\r\nimport classes from \"./pages styles/addmoviepage.module.scss\";\r\nimport Alert from \"sweetalert2\";\r\n\r\nconst AddMoviePage = (props) => {\r\n  const [createMovie, { loading, error }] = useMutation(CREATE_MOVIE, {\r\n    onCompleted({ createMovie }) {\r\n      Alert.fire(\"Added Movie succesfully!\", \"\", \"success\");\r\n      props.history.push(\"/main\");\r\n    },\r\n    onError(createMovie) {\r\n      Alert.fire(\"Error\", \"Please check inputs\", \"error\");\r\n    },\r\n  });\r\n\r\n  const [title, setTitle] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [duration, setDuration] = useState();\r\n  const [actors, setActors] = useState();\r\n  const [releaseDate, setReleaseDate] = useState();\r\n  const [thumbnail, setThumbnail] = useState();\r\n\r\n  const onSubmit = (e) => {\r\n    createMovie({\r\n      variables: {\r\n        title,\r\n        description,\r\n        releaseDate,\r\n        duration: +duration,\r\n        thumbnail,\r\n        actors,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: MOVIES,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <div className={classes.form}>\r\n        <h1>Add Movie</h1>\r\n        <form autocomplete=\"off\">\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Movie Title:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"description\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Description:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              name=\"duration\"\r\n              step=\"1\"\r\n              onChange={(e) => setDuration(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Duration:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"date\"\r\n              required\r\n              name=\"date\"\r\n              onChange={(e) => setReleaseDate(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Release Date:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"pic\"\r\n              onChange={(e) => setThumbnail(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Thumbnail Picture:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"actors\"\r\n              onChange={(e) => setActors(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Actors:</label>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"button\"\r\n            onClick={(e) => {\r\n              onSubmit(e);\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMoviePage;\r\n","import Movie from \"../components/Movie/Movie\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport classes from \"./pages styles/mainpage.module.scss\";\r\n\r\nimport { MOVIES, GETUSER } from \"../queries/index\";\r\n\r\nconst MyMoviesPage = (props) => {\r\n  const { loading, err, data } = useQuery(MOVIES, {});\r\n  const userdata = useQuery(GETUSER).data;\r\n\r\n  console.log(data);\r\n  if (data && userdata) {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <div className={classes.movielist}>\r\n          <div className={classes.movies}>\r\n            {data.movies\r\n              .filter(\r\n                (movie) => movie.creatorname === userdata.currentUser.username\r\n              )\r\n              .map((movie) => (\r\n                <Movie key={movie.id} {...movie} />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default MyMoviesPage;\r\n","import Stars from \"react-star-ratings\";\r\nimport classes from \"./review.module.scss\";\r\n\r\nconst Review = (props) => {\r\n  return (\r\n    <div className={classes.review}>\r\n      <h4>\r\n        <div className={classes.username}>{props.review.user.username}</div>{\" \"}\r\n        rated this movie with{\" \"}\r\n        <div className={classes.username}>{props.review.rating} stars</div> and\r\n        commented:\r\n      </h4>\r\n      <div className={classes.comment}>\r\n        <h3>\"{props.review.comment}\"</h3>\r\n        <Stars\r\n          rating={props.review.rating}\r\n          starRatedColor=\"gold\"\r\n          isSelectable={false}\r\n          numberOfStars={5}\r\n          name=\"rating\"\r\n          starDimension=\"30px\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport Review from \"./Review\";\r\nimport { ADD_REVIEW, MOVIE } from \"../../queries/index\";\r\n\r\nimport classes from \"./reviewlist.module.scss\";\r\nimport Stars from \"react-star-ratings\";\r\nimport Alert from \"sweetalert2\";\r\n\r\nconst ReviewList = (props) => {\r\n  const [addReview, { loading, error }] = useMutation(ADD_REVIEW, {\r\n    onCompleted({ addReview }) {\r\n      Alert.fire(\"Review added succesfully!\", \"\", \"success\");\r\n    },\r\n    onError(error) {\r\n      if (error.message.includes(\"E11000 duplicate key error collection\")) {\r\n        Alert.fire(\"Error\", \"You have already submitted a review\", \"error\");\r\n      } else if (\r\n        error.message.includes(\r\n          \"Review validation failed: comment: Path `comment` is required.\"\r\n        )\r\n      ) {\r\n        Alert.fire(\"Error\", \"Please include a comment!\", \"error\");\r\n      } else {\r\n        Alert.fire(\"Error\", `${error}`, \"error\");\r\n      }\r\n    },\r\n  });\r\n\r\n  const [rating, setRating] = useState();\r\n  const [comment, setComment] = useState();\r\n  //const [movie, setMovie] = useState();\r\n\r\n  const onPost = (e) => {\r\n    e.preventDefault();\r\n    addReview({\r\n      variables: {\r\n        rating: +rating,\r\n        comment,\r\n        movie: props.movieid,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: MOVIE,\r\n          variables: { id: props.movieid },\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  console.log(props);\r\n\r\n  if (1 === 1) {\r\n    return (\r\n      <div className={classes.reviews}>\r\n        <div className={classes.title}>\r\n          <h1>User Reviews</h1>\r\n        </div>\r\n        <div className={classes.comments}>\r\n          {props.reviews.map((review) => (\r\n            <Review key={review.id} review={review} />\r\n          ))}\r\n        </div>\r\n        <div className={classes.reviewinput}>\r\n          <form>\r\n            <div className={classes.input}>\r\n              <label>Comment</label>\r\n              <input type=\"text\" onChange={(e) => setComment(e.target.value)} />\r\n              <label>Rating</label>\r\n              <Stars\r\n                rating={rating}\r\n                starRatedColor=\"gold\"\r\n                changeRating={setRating}\r\n                numberOfStars={5}\r\n                name=\"rating\"\r\n                starDimension=\"20px\"\r\n              />\r\n            </div>\r\n          </form>\r\n          <button type=\"submit\" onClick={(e) => onPost(e)}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default ReviewList;\r\n","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MOVIE, GETUSER, DELETE_MOVIE } from \"../queries/index\";\r\n\r\nimport classes from \"./pages styles/moviepage.module.scss\";\r\nimport Stars from \"react-star-ratings\";\r\nimport Alert from \"sweetalert2\";\r\n\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport ReviewList from \"../components/Review/ReviewList\";\r\n\r\nconst MoviePage = (props) => {\r\n  const { data, loading } = useQuery(MOVIE, {\r\n    variables: { id: props.match.params.id },\r\n  });\r\n\r\n  const userdata = useQuery(GETUSER).data;\r\n\r\n  const [deleteMovie, { loadingDel, errorDel }] = useMutation(DELETE_MOVIE, {\r\n    onCompleted(deleteMovie) {\r\n      Alert.fire(\"Deleted!\");\r\n      props.history.push(\"/mymovies\");\r\n      window.location.reload(false);\r\n    },\r\n    onError(deleteMovie) {\r\n      Alert.fire(\"Cant delete!\", \"\", \"error\");\r\n    },\r\n  });\r\n\r\n  const deleteMovieHandler = () => {\r\n    deleteMovie({\r\n      variables: { id: props.match.params.id },\r\n    });\r\n  };\r\n  // if (data.movie.creatorname === userdata.currentUser.username) {\r\n  //   sameUser = \"true\";\r\n  // }\r\n\r\n  if (data && userdata) {\r\n    const {\r\n      thumbnail,\r\n      duration,\r\n      title,\r\n      ratingsAvg,\r\n      ratings,\r\n      releaseDate,\r\n      actors,\r\n      addedDate,\r\n      creatorname,\r\n      description,\r\n      id,\r\n      reviews,\r\n    } = data.movie;\r\n\r\n    // const userdata = useQuery(GETUSER).data;\r\n    // useEffect(() => {\r\n    //   if (!loading) {\r\n    //     userdata();\r\n    //   }\r\n    // });\r\n\r\n    //   const sameUser = data.movie.creatorname === userdata.currentUser.username;\r\n    // console.log(data.movie.reviews);\r\n\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <div className={classes.moviebox}>\r\n          <div className={classes.title}>\r\n            <h3>{title}</h3>\r\n\r\n            <div className={classes.creatordetails}>\r\n              <p>Added by {creatorname} </p>\r\n              <p> Added at {new Date(addedDate).toLocaleString()}</p>\r\n            </div>\r\n          </div>\r\n          <div className={classes.content}>\r\n            <div className={classes.pictureside}>\r\n              <img src={thumbnail} alt={title} />\r\n              <br />\r\n              <Stars\r\n                rating={ratingsAvg}\r\n                starRatedColor=\"gold\"\r\n                isSelectable={false}\r\n                numberOfStars={5}\r\n                name=\"rating\"\r\n                starDimension=\"25px\"\r\n              />\r\n              <p>Rated {ratings} times</p>\r\n              <p>Duration: {duration}min</p>\r\n            </div>\r\n            <div className={classes.textside}>\r\n              <p>{description}</p> <br />\r\n              <p>Release Date: {releaseDate}</p> <br />\r\n              <p>Actors: {actors}</p> <br />\r\n              {data.movie.creatorname === userdata.currentUser.username ? (\r\n                <div className={classes.editbutton}>\r\n                  <Link to={id + \"/edit\"}>\r\n                    <button>Edit This Movie Details</button>\r\n                  </Link>\r\n                  <button onClick={deleteMovieHandler}>Delete</button>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ReviewList reviews={reviews} movieid={id} />\r\n      </div>\r\n    );\r\n  }\r\n  return \"Please sign in to see movie details\";\r\n};\r\n\r\nexport default MoviePage;\r\n","import { useState } from \"react\";\r\n\r\nimport { MOVIE, EDIT_MOVIE } from \"../queries/index\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\n\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\n\r\nimport classes from \"./pages styles/addmoviepage.module.scss\";\r\nimport Alert from \"sweetalert2\";\r\n\r\nconst EditMoviePage = (props) => {\r\n  const [editMovie, { loading, error }] = useMutation(EDIT_MOVIE, {\r\n    onCompleted({ editMovie }) {\r\n      Alert.fire(\"Movie edited succesfully!\", \"\", \"success\");\r\n      props.history.push(\"/movie/\" + id);\r\n    },\r\n    onError(editMovie) {\r\n      Alert.fire(\"Error\", \"Please check inputs\", \"error\");\r\n    },\r\n  });\r\n\r\n  const { data } = useQuery(MOVIE, {\r\n    variables: { id: props.match.params.id },\r\n  });\r\n\r\n  let initTitle = \"\";\r\n  let initDescription = \"\";\r\n  let initReleaseDate = \"\";\r\n  let initDuration = 0;\r\n  let initThumbnail = \"\";\r\n  let initActors = [];\r\n  let id = \"\";\r\n\r\n  if (data && data.movie) {\r\n    //console.log(\"IF PASSED\");\r\n    initTitle = data.movie.title;\r\n    initDescription = data.movie.description;\r\n    initReleaseDate = data.movie.releaseDate;\r\n    initDuration = data.movie.duration;\r\n    initThumbnail = data.movie.thumbnail;\r\n    initActors = data.movie.actors;\r\n    id = data.movie.id;\r\n    //console.log(\"init title\" + initTitle); checking if the title is changing\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    editMovie({\r\n      variables: {\r\n        id,\r\n        title,\r\n        description,\r\n        releaseDate,\r\n        duration: +duration,\r\n        thumbnail,\r\n        actors,\r\n      },\r\n    });\r\n  };\r\n  const [title, setTitle] = useState(initTitle);\r\n  const [description, setDescription] = useState(initDescription);\r\n  const [releaseDate, setReleaseDate] = useState(initReleaseDate);\r\n  const [duration, setDuration] = useState(initDuration);\r\n  const [thumbnail, setThumbnail] = useState(initThumbnail);\r\n  const [actors, setActors] = useState(initActors);\r\n  console.log(\"title : \" + title);\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <div className={classes.form}>\r\n        <h1>Edit Movie Page</h1>\r\n        <form autocomplete=\"off\">\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"title\"\r\n              value={title}\r\n              onInput={(e) => {\r\n                setTitle(e.target.value);\r\n                console.log(\"target\" + e.target.value);\r\n              }}\r\n            />\r\n\r\n            <span></span>\r\n            <label>Movie Title:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Description:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              name=\"duration\"\r\n              step=\"1\"\r\n              value={duration}\r\n              onChange={(e) => setDuration(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Duration:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"date\"\r\n              required\r\n              name=\"date\"\r\n              value={releaseDate}\r\n              onChange={(e) => setReleaseDate(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Release Date:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"pic\"\r\n              value={thumbnail}\r\n              onChange={(e) => setThumbnail(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Thumbnail Picture:</label>\r\n          </div>\r\n\r\n          <div className={classes.textfield}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"actors\"\r\n              value={actors}\r\n              onChange={(e) => setActors(e.target.value)}\r\n            />\r\n            <span></span>\r\n            <label>Actors:</label>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"button\"\r\n            onClick={(e) => {\r\n              onSubmit(e);\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditMoviePage;\r\n","import \"./App.scss\";\n\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  Switch,\n  Route,\n  Link,\n  BrowserRouter,\n} from \"react-router-dom\";\n\nimport AuthPage from \"./pages/AuthPage\";\nimport MainPage from \"./pages/MainPage\";\nimport AddMoviePage from \"./pages/AddMoviePage\";\nimport MyMoviesPage from \"./pages/MyMoviesPage\";\nimport MoviePage from \"./pages/MoviePage\";\nimport EditMoviePage from \"./pages/EditMoviePage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/main\" exact component={MainPage} />\n        <Route path=\"/addmovie\" exact component={AddMoviePage} />\n        <Route path=\"/mymovies\" exact component={MyMoviesPage} />\n        <Route path=\"/movie/:id\" exact component={MoviePage} />\n        <Route path=\"/movie/:id/edit\" exact component={EditMoviePage} />\n        <Route path=\"/\" component={AuthPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\r\n  token: null,\r\n  error: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCES\":\r\n      return { ...state, token: action.token, error: null };\r\n    case \"LOGIN_FAIL\":\r\n      return { ...state, token: null, error: action.error };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default authReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  ApolloError,\n  ApolloLink,\n  HttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { onError } from \"@apollo/client/link/error\";\n// Import Reducers\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers\";\nimport authReducer from \"./store/reducers/authReducer\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    console.log(\"graphQLErrors\", graphQLErrors);\n  }\n  if (networkError) {\n    console.log(\"networkError\", networkError);\n  }\n});\n\nconst httpLink = new HttpLink({ uri: \"https://moviesiteapi.herokuapp.com/\" });\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"token\");\n  // add the authorization to the headers\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst link = ApolloLink.from([authLink, errorLink, httpLink]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link,\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"addmoviepage_form__2maGZ\",\"textfield\":\"addmoviepage_textfield__347En\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movielist\":\"mainpage_movielist__1_b_V\",\"movies\":\"mainpage_movies__15Ye2\",\"sortbutton\":\"mainpage_sortbutton__9TbI9\",\"sort1\":\"mainpage_sort1__3SSGY\",\"sort2\":\"mainpage_sort2__1Hm6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviebox\":\"moviepage_moviebox__15BJd\",\"title\":\"moviepage_title__1mhpT\",\"creatordetails\":\"moviepage_creatordetails__QE_4t\",\"content\":\"moviepage_content__cNTt3\",\"pictureside\":\"moviepage_pictureside__21WNF\",\"textside\":\"moviepage_textside__3tZbn\",\"editbutton\":\"moviepage_editbutton__1CSOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__1Hnuu\",\"logo\":\"navbar_logo__1UVAx\",\"userprofile\":\"navbar_userprofile__2CGUm\",\"links\":\"navbar_links__2cq21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviews\":\"reviewlist_reviews__32Opk\",\"title\":\"reviewlist_title__2d_HP\",\"comments\":\"reviewlist_comments__2luWD\",\"reviewinput\":\"reviewlist_reviewinput__1hzRT\",\"input\":\"reviewlist_input__2nBim\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"review\":\"review_review__2GDBq\",\"username\":\"review_username__iM5dN\",\"comment\":\"review_comment__2S22S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__1CJLT\",\"textfield\":\"login_textfield__1RVjk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"register_form__WlI3l\",\"textfield\":\"register_textfield__3Dicv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"authpage_link__1t_9k\",\"intro\":\"authpage_intro__37yoa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviestyle\":\"movie_moviestyle__3AQna\"};"],"sourceRoot":""}